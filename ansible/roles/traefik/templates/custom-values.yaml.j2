commonLabels: {
  app: traefik
}

deployment:
  labels: {
    app: traefik
  }
  podAnnotations: {}
  podLabels: {
    app: traefik
  }

ingressClass:
  enabled: true
  isDefaultClass: true

ingressRoute:
  dashboard:
    enabled: true
    annotations: {}
    labels: {
      app: traefik-dashboard
    }
    matchRule: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
    entryPoints: ["traefik"]
    middlewares: []
    tls: {}
  healthcheck:
    enabled: false
    annotations: {}
    labels: {
      app: traefik-healthcheck
    }
    matchRule: PathPrefix(`/ping`)
    entryPoints: ["traefik"]
    middlewares: []
    tls: {}

providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true
    allowEmptyServices: false
    namespaces: []
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: false
    allowEmptyServices: false
    namespaces: []
    disableIngressClassLookup: false
    publishedService:
      enabled: false
  file:
    enabled: false
    watch: true
    content:

volumes: [
  {
    name: "traefik-config",
    configMap: {
      name: "traefik-config"
    }
  }
]

logs:
  general:
    format:
    level: DEBUG
  access:
    enabled: true

globalArguments:
- "--global.checknewversion"
- "--global.sendanonymoususage"

additionalArguments: []

ports:
  traefik:
    port: 9000
    expose:
      default: false
    exposedPort: 9000
    protocol: TCP
  web:
    port: 8000
    expose:
      default: true
    exposedPort: 80
  websecure:
    port: 8443
    expose:
      default: true
    exposedPort: 443
  metrics:
    port: 9100
    expose:
      default: false
    exposedPort: 9100
    protocol: TCP

service:
  enabled: true
  single: true
  type: LoadBalancer
  labels: {
    app: traefik-service
  }